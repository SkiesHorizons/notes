// This file is auto-generated by @hey-api/openapi-ts

export type User = {
  id: string
  username: string
  email: string
  createdAt: string
  updatedAt: string
}

export type UserRegistration = {
  username: string
  email: string
  password: string
}

export type AuthTokens = {
  accessToken: string
}

export type LoginCredentials = {
  username: string
  password: string
}

export type Note = {
  id: string
  userId: string
  title: string | null
  content: string
  createdAt: string
  updatedAt: string
}

export type NoteCreate = {
  title?: string
  content: string
}

export type NotePatch = {
  title?: string
  content?: string
}

export type RegisterData = {
  body?: UserRegistration
  path?: never
  query?: never
  url: "/auth/register"
}

export type RegisterErrors = {
  /**
   * Invalid input data
   */
  400: unknown
}

export type RegisterResponses = {
  /**
   * User created successfully
   */
  201: User
}

export type RegisterResponse = RegisterResponses[keyof RegisterResponses]

export type LoginData = {
  body?: LoginCredentials
  path?: never
  query?: never
  url: "/auth/login"
}

export type LoginErrors = {
  /**
   * Invalid credentials
   */
  401: unknown
}

export type LoginResponses = {
  /**
   * Login successful
   */
  200: AuthTokens
}

export type LoginResponse = LoginResponses[keyof LoginResponses]

export type ListNotesData = {
  body?: never
  path?: never
  query?: never
  url: "/notes"
}

export type ListNotesResponses = {
  /**
   * List of notes
   */
  200: Array<Note>
}

export type ListNotesResponse = ListNotesResponses[keyof ListNotesResponses]

export type CreateNoteData = {
  body?: NoteCreate
  path?: never
  query?: never
  url: "/notes"
}

export type CreateNoteErrors = {
  /**
   * Invalid input data
   */
  400: unknown
}

export type CreateNoteResponses = {
  /**
   * Note created successfully
   */
  201: Note
}

export type CreateNoteResponse = CreateNoteResponses[keyof CreateNoteResponses]

export type DeleteNoteData = {
  body?: never
  path: {
    /**
     * The ID of the note to retrieve
     */
    noteId: string
  }
  query?: never
  url: "/notes/{noteId}"
}

export type DeleteNoteErrors = {
  /**
   * Note not found
   */
  404: unknown
}

export type DeleteNoteResponses = {
  /**
   * Note deleted successfully
   */
  204: void
}

export type DeleteNoteResponse = DeleteNoteResponses[keyof DeleteNoteResponses]

export type GetNoteByIdData = {
  body?: never
  path: {
    /**
     * The ID of the note to retrieve
     */
    noteId: string
  }
  query?: never
  url: "/notes/{noteId}"
}

export type GetNoteByIdErrors = {
  /**
   * Note not found
   */
  404: unknown
}

export type GetNoteByIdResponses = {
  /**
   * Note details
   */
  200: Note
}

export type GetNoteByIdResponse = GetNoteByIdResponses[keyof GetNoteByIdResponses]

export type PatchNoteData = {
  body?: NotePatch
  path: {
    /**
     * The ID of the note to retrieve
     */
    noteId: string
  }
  query?: never
  url: "/notes/{noteId}"
}

export type PatchNoteErrors = {
  /**
   * Invalid input data
   */
  400: unknown
  /**
   * Note not found
   */
  404: unknown
}

export type PatchNoteResponses = {
  /**
   * Note updated successfully
   */
  200: Note
}

export type PatchNoteResponse = PatchNoteResponses[keyof PatchNoteResponses]

export type GetCurrentUserData = {
  body?: never
  path?: never
  query?: never
  url: "/users/@me"
}

export type GetCurrentUserErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type GetCurrentUserResponses = {
  /**
   * User details
   */
  200: User
}

export type GetCurrentUserResponse = GetCurrentUserResponses[keyof GetCurrentUserResponses]

export type ClientOptions = {
  baseUrl: "http://localhost:8080" | (string & {})
}
